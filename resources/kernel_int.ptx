//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

	// .globl	add

.visible .entry add(
	.param .u64 add_param_0,
	.param .u64 add_param_1,
	.param .u64 add_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [add_param_0];
	ld.param.u64 	%rd2, [add_param_1];
	ld.param.u64 	%rd3, [add_param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;
	mov.u32 	%r1, %tid.x;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.u32 	%r2, [%rd8];
	add.s64 	%rd9, %rd5, %rd7;
	ld.global.u32 	%r3, [%rd9];
	add.s32 	%r4, %r3, %r2;
	add.s64 	%rd10, %rd4, %rd7;
	st.global.u32 	[%rd10], %r4;
	ret;

}
	// .globl	sub
.visible .entry sub(
	.param .u64 sub_param_0,
	.param .u64 sub_param_1,
	.param .u64 sub_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [sub_param_0];
	ld.param.u64 	%rd2, [sub_param_1];
	ld.param.u64 	%rd3, [sub_param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;
	mov.u32 	%r1, %tid.x;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.u32 	%r2, [%rd8];
	add.s64 	%rd9, %rd5, %rd7;
	ld.global.u32 	%r3, [%rd9];
	sub.s32 	%r4, %r2, %r3;
	add.s64 	%rd10, %rd4, %rd7;
	st.global.u32 	[%rd10], %r4;
	ret;

}
	// .globl	dot
.visible .entry dot(
	.param .u64 dot_param_0,
	.param .u64 dot_param_1,
	.param .u64 dot_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [dot_param_0];
	ld.param.u64 	%rd2, [dot_param_1];
	ld.param.u64 	%rd3, [dot_param_2];
	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;
	mov.u32 	%r1, %tid.x;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.u32 	%r2, [%rd8];
	add.s64 	%rd9, %rd5, %rd7;
	ld.global.u32 	%r3, [%rd9];
	mul.lo.s32 	%r4, %r3, %r2;
	add.s64 	%rd10, %rd4, %rd7;
	st.global.u32 	[%rd10], %r4;
	ret;

}
	// .globl	add_scalar
.visible .entry add_scalar(
	.param .u64 add_scalar_param_0,
	.param .u64 add_scalar_param_1,
	.param .u32 add_scalar_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [add_scalar_param_0];
	ld.param.u64 	%rd2, [add_scalar_param_1];
	ld.param.u32 	%r1, [add_scalar_param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %tid.x;
	mul.wide.u32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r3, [%rd6];
	add.s32 	%r4, %r3, %r1;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.u32 	[%rd7], %r4;
	ret;

}
	// .globl	sub_scalar
.visible .entry sub_scalar(
	.param .u64 sub_scalar_param_0,
	.param .u64 sub_scalar_param_1,
	.param .u32 sub_scalar_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [sub_scalar_param_0];
	ld.param.u64 	%rd2, [sub_scalar_param_1];
	ld.param.u32 	%r1, [sub_scalar_param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %tid.x;
	mul.wide.u32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r3, [%rd6];
	sub.s32 	%r4, %r3, %r1;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.u32 	[%rd7], %r4;
	ret;

}
	// .globl	mul_scalar
.visible .entry mul_scalar(
	.param .u64 mul_scalar_param_0,
	.param .u64 mul_scalar_param_1,
	.param .u32 mul_scalar_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [mul_scalar_param_0];
	ld.param.u64 	%rd2, [mul_scalar_param_1];
	ld.param.u32 	%r1, [mul_scalar_param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %tid.x;
	mul.wide.u32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r3, [%rd6];
	mul.lo.s32 	%r4, %r3, %r1;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.u32 	[%rd7], %r4;
	ret;

}
	// .globl	div_scalar
.visible .entry div_scalar(
	.param .u64 div_scalar_param_0,
	.param .u64 div_scalar_param_1,
	.param .u32 div_scalar_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [div_scalar_param_0];
	ld.param.u64 	%rd2, [div_scalar_param_1];
	ld.param.u32 	%r1, [div_scalar_param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %tid.x;
	mul.wide.u32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r3, [%rd6];
	div.s32 	%r4, %r3, %r1;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.u32 	[%rd7], %r4;
	ret;

}
	// .globl	scalar_sub
.visible .entry scalar_sub(
	.param .u64 scalar_sub_param_0,
	.param .u64 scalar_sub_param_1,
	.param .u32 scalar_sub_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [scalar_sub_param_0];
	ld.param.u64 	%rd2, [scalar_sub_param_1];
	ld.param.u32 	%r1, [scalar_sub_param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %tid.x;
	mul.wide.u32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r3, [%rd6];
	sub.s32 	%r4, %r1, %r3;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.u32 	[%rd7], %r4;
	ret;

}
	// .globl	scalar_div
.visible .entry scalar_div(
	.param .u64 scalar_div_param_0,
	.param .u64 scalar_div_param_1,
	.param .u32 scalar_div_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [scalar_div_param_0];
	ld.param.u64 	%rd2, [scalar_div_param_1];
	ld.param.u32 	%r1, [scalar_div_param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %tid.x;
	mul.wide.u32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r3, [%rd6];
	div.s32 	%r4, %r1, %r3;
	add.s64 	%rd7, %rd3, %rd5;
	st.global.u32 	[%rd7], %r4;
	ret;

}

